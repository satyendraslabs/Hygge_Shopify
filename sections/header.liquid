<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">

{%- if settings.predictive_search_enabled -%}
  <link rel="stylesheet" href="{{ 'component-price.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}

{%- if section.settings.menu_type_desktop == 'mega' -%}
  <link rel="stylesheet" href="{{ 'component-mega-menu.css' | asset_url }}" media="print" onload="this.media='all'">
{%- endif -%}


<style>
  </i> {
    justify-self: start;
    margin-left: -1.2rem;
  }

  {%- if section.settings.sticky_header_type == 'reduce-logo-size' -%}
    .scrolled-past-header .header__heading-logo-wrapper {
      width: 75%;
    }
  {%- endif -%}

  {%- if section.settings.menu_type_desktop != "drawer" -%}
    @media screen and (min-width: 990px) {
      header-drawer {
        display: none;
      }
    }
  {%- endif -%}

  .menu-drawer-container {
    display: flex;
  }

  .list-menu {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .list-menu--inline {
    display: inline-flex;
    flex-wrap: wrap;
  }

  summary.list-menu__item {
    padding-right: 2.7rem;
  }

  .list-menu__item {
    display: flex;
    align-items: center;
    line-height: calc(1 + 0.3 / var(--font-body-scale));
  }

  .list-menu__item--link {
    text-decoration: none;
    padding-bottom: 1rem;
    padding-top: 1rem;
    line-height: calc(1 + 0.8 / var(--font-body-scale));
  }

  @media screen and (min-width: 750px) {
    .list-menu__item--link {
      padding-bottom: 0.5rem;
      padding-top: 0.5rem;
    }
  }
  {% if section.settings.drawer_position %}
    .header--middle-left.drawer-menu {
        grid-template-areas: '{{section.settings.drawer_position}}';
        grid-template-columns: auto 1fr auto;
        column-gap: 1rem;
    }
{% endif %}
 
</style>

{%- style -%}
  .header {
    padding: {{ section.settings.padding_top | times: 0.5 | round: 0 }}px 3rem {{ section.settings.padding_bottom | times: 0.5 | round: 0 }}px 3rem;
  }

  .section-header {
    position: sticky; /* This is for fixing a Safari z-index issue. PR #2147 */
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-header {
      margin-bottom: {{ section.settings.margin_bottom }}px;
    }
  }

  @media screen and (min-width: 990px) {
    .header {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

<svg xmlns="http://www.w3.org/2000/svg" class="hidden">
  <symbol id="icon-search" viewbox="0 0 18 19" fill="none">
    <path fill-rule="evenodd" clip-rule="evenodd" d="M11.03 11.68A5.784 5.784 0 112.85 3.5a5.784 5.784 0 018.18 8.18zm.26 1.12a6.78 6.78 0 11.72-.7l5.4 5.4a.5.5 0 11-.71.7l-5.41-5.4z" fill="currentColor"/>
  </symbol>

  <symbol id="icon-reset" class="icon icon-close"  fill="none" viewBox="0 0 18 18" stroke="currentColor">
    <circle r="8.5" cy="9" cx="9" stroke-opacity="0.2"/>
    <path d="M6.82972 6.82915L1.17193 1.17097" stroke-linecap="round" stroke-linejoin="round" transform="translate(5 5)"/>
    <path d="M1.22896 6.88502L6.77288 1.11523" stroke-linecap="round" stroke-linejoin="round" transform="translate(5 5)"/>
  </symbol>

  <symbol id="icon-close" class="icon icon-close" fill="none" viewBox="0 0 18 17">
    <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor">
  </symbol>
</svg>

{%- liquid
  for block in section.blocks
    if block.type == '@app'
      assign has_app_block = true
    endif
  endfor
-%}

<{% if section.settings.sticky_header_type != 'none' %}sticky-header data-sticky-type="{{ section.settings.sticky_header_type }}"{% else %}div{% endif %} class="header-wrapper color-{{ section.settings.color_scheme }} gradient{% if section.settings.show_line_separator %} header-wrapper--border-bottom{% endif %}">
  {%- liquid
    assign social_links = false
    assign localization_forms = false

    if settings.social_twitter_link != blank or settings.social_facebook_link != blank or settings.social_pinterest_link != blank or settings.social_instagram_link != blank or settings.social_youtube_link != blank or settings.social_vimeo_link != blank or settings.social_tiktok_link != blank or settings.social_tumblr_link != blank or settings.social_snapchat_link != blank
      assign social_links = true
    endif

    if localization.available_countries.size > 1 and section.settings.enable_country_selector or section.settings.enable_language_selector and localization.available_languages.size > 1
      assign localization_forms = true
    endif
  -%}
  <header class="header header--{{ section.settings.logo_position }} header--mobile-{{ section.settings.mobile_logo_position }} page-width{% if section.settings.menu_type_desktop == 'drawer' %} drawer-menu{% endif %}{% if section.settings.menu != blank %} header--has-menu{% endif %}{% if has_app_block %} header--has-app{% endif %}{% if social_links %} header--has-social{% endif %}{% if shop.customer_accounts_enabled %} header--has-account{% endif %}{% if localization_forms %} header--has-localizations{% endif %}">
    {%- liquid
      if section.settings.menu != blank
        render 'header-drawer'
      endif

      if section.settings.logo_position == 'top-center' or section.settings.menu == blank
        render 'header-search', input_id: 'Search-In-Modal-1'
      endif
    -%}

    {%- if section.settings.logo_position != 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
          <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
            {%- if settings.logo != blank -%}
              <div class="header__heading-logo-wrapper ">
                {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
                {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
                {% capture sizes %}(max-width: {{ settings.logo_width | times: 2 }}px) 50vw, {{ settings.logo_width }}px{% endcapture %}
                {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
                {{ settings.logo | image_url: width: 600 | image_tag:
                  class: 'header__heading-logo motion-reduce desktop-logo light-logo ',
                  widths: widths,
                  height: logo_height,
                  width: settings.logo_width,
                  alt: logo_alt,
                  sizes: sizes,
                  preload: true
                }}
                <img src="{{ 'Dark_Logo.svg' | asset_url }}" class="header__heading-logo dark-logo" style="display:none;" alt="{{ logo_alt }}">
                <img src="{{ 'logo-mobile.svg' | asset_url }}" class="header__heading-logo mobile-logo light-logo" alt="{{ logo_alt }}">
                <img src="{{ 'header_mobile_dark_logo.svg' | asset_url }}" class="header__heading-logo mobile-logo dark-logo" style="display:none;" alt="{{ logo_alt }}">
              
              </div>
            {%- else -%}  
              <span class="h2">{{ shop.name }}</span>
            {%- endif -%}
          </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

    {%- liquid
      if section.settings.menu != blank
        if section.settings.menu_type_desktop == 'dropdown'
          render 'header-dropdown-menu'
        elsif section.settings.menu_type_desktop != 'drawer'
          render 'header-mega-menu'
        endif
      endif
    %}

    {%- if section.settings.logo_position == 'middle-center' -%}
      {%- if request.page_type == 'index' -%}
        <h1 class="header__heading">
      {%- endif -%}
          <a href="{{ routes.root_url }}" class="header__heading-link link link--text focus-inset">
            {%- if settings.logo != blank -%}
              <div class="header__heading-logo-wrapper">
                {%- assign logo_alt = settings.logo.alt | default: shop.name | escape -%}
                {%- assign logo_height = settings.logo_width | divided_by: settings.logo.aspect_ratio -%}
                {% capture sizes %}(min-width: 750px) {{ settings.logo_width }}px, 50vw{% endcapture %}
                {% capture widths %}{{ settings.logo_width }}, {{ settings.logo_width | times: 1.5 | round }}, {{ settings.logo_width | times: 2 }}{% endcapture %}
                {{ settings.logo | image_url: width: 600 | image_tag:
                  class: 'header__heading-logo',
                  widths: widths,
                  height: logo_height,
                  width: settings.logo_width,
                  alt: logo_alt,
                  sizes: sizes,
                  preload: true
                }}
              </div>
            {%- else -%}
              <span class="h2">{{ shop.name }}</span>
            {%- endif -%}
          </a>
      {%- if request.page_type == 'index' -%}
        </h1>
      {%- endif -%}
    {%- endif -%}

    <div class="header__icons{% if section.settings.enable_country_selector or section.settings.enable_language_selector %} header__icons--localization header-localization{% endif %}">
      <div class="desktop-localization-wrapper">
        {%- if section.settings.enable_country_selector and localization.available_countries.size > 1 -%}
          <localization-form class="small-hide medium-hide" data-prevent-hide>
            {%- form 'localization', id: 'HeaderCountryForm', class: 'localization-form' -%}
              <div>
                <h2 class="visually-hidden" id="HeaderCountryLabel">{{ 'localization.country_label' | t }}</h2>
                {%- render 'country-localization', localPosition: 'HeaderCountry' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {% endif %}

        {%- if section.settings.enable_language_selector and localization.available_languages.size > 1 -%}
          <localization-form class="small-hide medium-hide" data-prevent-hide>
            {%- form 'localization', id: 'HeaderLanguageForm', class: 'localization-form' -%}
              <div>
                <h2 class="visually-hidden" id="HeaderLanguageLabel">{{ 'localization.language_label' | t }}</h2>
                {%- render 'language-localization', localPosition: 'HeaderLanguage' -%}
              </div>
            {%- endform -%}
          </localization-form>
        {%- endif -%}
      </div>
      {% comment %} {% render 'header-search', input_id: 'Search-In-Modal' %} {% endcomment %}

      {% comment %} ========>Added Custom Search Bar<======== {% endcomment %}
      <div class="custom-mobile-search">
        {% render 'header-search', input_id: 'Search-In-Modal' %}
      </div>

      <div class="custom-desktop-search">
        {%- if settings.predictive_search_enabled -%}
         <predictive-search class="search-modal__form" data-loading-text="{{ 'accessibility.loading' | t }}">
        {%- else -%}
        <search-form class="search-modal__form">
        {%- endif -%}
        <form action="{{ routes.search_url }}" method="get" role="search" class="search search-modal__form">
           <div class="field">
            <input class="search__input field__input custom-search-input" id="{{ input_id }}" type="search" name="q"
            value="{{ search.terms | escape }}" placeholder="{{ 'general.search.search' | t }}" {%- if
            settings.predictive_search_enabled -%} role="combobox" aria-expanded="false"
            aria-owns="predictive-search-results" aria-controls="predictive-search-results"
            aria-haspopup="listbox" aria-autocomplete="list" autocorrect="off" autocomplete="off"
            autocapitalize="off" spellcheck="false" {%- endif -%}>
            <label class="field__label search-bar-label" for="{{ input_id }}">{{ 'general.search.search' | t}}</label>
            <input type="hidden" name="options[prefix]" value="last">

            <button type="reset" class="reset__button field__button{% if search.terms == blank %} hidden{% endif %}"
              aria-label="{{ 'general.search.reset' | t }}" id="reset-btn">
              <svg class="icon icon-close" aria-hidden="true" focusable="false">
              <use xlink:href="#icon-reset">
              </svg>
            </button>
          </div>

        <button style="display: none;" class="search__button field__button" aria-label="{{ 'general.search.search' | t }}"
        id="search-btn">
          <a href="#icon-search">
          <img src="{{ 'Search_icon.svg' | asset_url }}" alt="Search"
          class="modal__toggle-open icon icon-search">
          </a>
        </button>
        {%- if settings.predictive_search_enabled -%}
        <div class="predictive-search predictive-search--header" tabindex="-1" data-predictive-search>
        </div>
        <span class="predictive-search-status visually-hidden" role="status" aria-hidden="true"></span>
        {%- endif -%}
        </form>
        {%- if settings.predictive_search_enabled -%}
        </predictive-search>
        {%- else -%}
        </search-form>
        {%- endif -%}
      </div>
      


      {% comment %} =======>Added Script of Custom Search button<======= {% endcomment %}
      <script>
        document.addEventListener('DOMContentLoaded', function () {
          const searchButton = document.getElementById('search-btn');
          const searchInput = document.querySelector('.custom-search-input');
          const searchLabel = document.querySelector('.search-bar-label');
          const resetButton = document.getElementById('reset-btn');
          const searchForm = document.querySelector('.search-modal__form'); // Form element
          const fieldWrapper = document.querySelector('.field'); // The div wrapping the input

          searchButton.style.display = 'block'; // Display Search Icon after page load

          setTimeout(() => {
            document.body.classList.add('loaded');
          }, 100);

          if (searchButton && searchInput && searchLabel && resetButton) {
            // Initialize search input state
            if (searchInput.value.trim() !== '') {
              searchInput.classList.add('expanded');
              searchLabel.style.display = 'block';
              resetButton.style.display = 'block';
              searchButton.classList.add('move-left');
            } else {
              searchLabel.style.display = 'none';
              resetButton.style.display = 'none';
            }

            searchButton.addEventListener('click', function (event) {
              if (searchInput.value.trim() === '') {
                event.preventDefault();
                searchInput.classList.toggle('expanded');
                searchButton.classList.toggle('move-left');

                // Toggle visibility of the label and reset button based on the expanded state
                if (searchInput.classList.contains('expanded')) {
                  searchLabel.style.display = 'block';
                  resetButton.style.display = 'none'; // Hide reset button when expanded
                } else {
                  searchLabel.style.display = 'none';
                  resetButton.style.display = 'none'; // Ensure reset button is hidden when collapsed
                }
              } else {
                // Allow form submission if there's text in the input
                searchInput.classList.add('expanded'); // Ensure it's expanded
                searchLabel.style.display = 'block'; // Show label if there's text
                resetButton.style.display = 'block'; // Show reset button when there's text
                searchButton.classList.add('move-left'); // Move search button to the left
              }
            });

            resetButton.addEventListener('click', function (event) {
              event.preventDefault();
              searchInput.value = ''; // Clear the input value
              searchInput.classList.remove('expanded');
              searchLabel.style.display = 'none';
              resetButton.style.display = 'none';
              searchButton.classList.remove('move-left');
            });

            searchInput.addEventListener('input', function () {
              if (searchInput.value.trim() !== '') {
                resetButton.style.display = 'block'; // Show reset button if there's text
                searchButton.classList.add('move-left'); // Move search button to the left
              } else {
                resetButton.style.display = 'none'; // Hide reset button if input is empty
                if (!searchInput.classList.contains('expanded')) {
                  searchButton.classList.remove('move-left'); // Move search button back to the right if input is collapsed
                }
              }
            });

            // Close search input when clicking outside, except on the search page
            document.addEventListener('click', function (event) {
              const isClickInsideForm = searchForm.contains(event.target); // Check if clicked inside the form
              const isClickOnSearchButton = searchButton.contains(event.target); // Check if clicked on the search button
              const isClickOnInput = searchInput.contains(event.target); // Check if clicked inside the search input

              // Check if on the search page
              const isOnSearchPage = window.location.pathname.includes('/search');

              // If the click is outside the search form, the search button, and the input, and we're NOT on the search page, close the search bar
              if (!isClickInsideForm && !isClickOnSearchButton && !isClickOnInput && !isOnSearchPage && searchInput.classList.contains('expanded')) {
                searchInput.value = ''; // Clear the input value when closing the search bar
                searchInput.classList.remove('expanded');
                searchLabel.style.display = 'none';
                resetButton.style.display = 'none';
                searchButton.classList.remove('move-left');
              }
            });
          }
        });
      </script>
      

      <a href="{{ routes.cart_url }}" class="header__icon header__icon--cart link focus-inset" id="cart-icon-bubble">
        {% comment %} {%- liquid
          if cart == empty
          render 'icon-cart-empty'
          else

            render 'icon-cart'
          endif
        -%} {% endcomment %}
         
        {%- if cart == empty -%}
          <img src="{{ 'Cart.svg' | asset_url }}" alt="Menu" class="profile_icon">
          {% comment %} {%render 'icon-cart-empty' %} {% endcomment %}
        {%- else -%}
        <img src="{{ 'Cart.svg' | asset_url }}" alt="Menu" class="profile_icon">
          {% comment %} {% render 'icon-cart' %} {% endcomment %}
        {%- endif -%}
        
        <span class="visually-hidden">{{ 'templates.cart.cart' | t }}</span>
        {%- if cart != empty -%}
          <div class="cart-count-bubble">
            {%- if cart.item_count < 100 -%}
              <span aria-hidden="true">{{ cart.item_count }}</span>
            {%- endif -%}
            <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
          </div>
        {%- endif -%}
      </a>

      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when '@app' -%}
            {% render block %}
        {%- endcase -%}
      {%- endfor -%}

      

      {%- if shop.customer_accounts_enabled -%}
      <a href="{%- if customer -%}{{ routes.account_url }}{%- else -%}{{ routes.account_login_url }}{%- endif -%}" class="header__icon header__icon--account link focus-inset{% if section.settings.menu != blank %} small-hide{% endif %}">
        {%- if section.settings.enable_customer_avatar -%}
          <account-icon>
            {%- if customer and customer.has_avatar? -%}
              {{ customer | avatar }}
            {%- else -%}
              {% comment %} {% render 'icon-account' %} {% endcomment %}
          <img src="{{ 'Profile.svg' | asset_url }}" alt="Menu" class="profile_icon">

            {%- endif -%}
          </account-icon>
        {%- else -%}
          {% render 'icon-account' %}
        {%- endif -%}
        <span class="visually-hidden">
          {%- liquid
            if customer
              echo 'customer.account_fallback' | t
            else
              echo 'customer.log_in' | t
            endif
          -%}
        </span>
      </a>
    {%- endif -%}
    </div>
  </header>
</{% if section.settings.sticky_header_type != 'none' %}sticky-header{% else %}div{% endif %}>

{% comment %} =======>Javascript for Menu Hover Affect<=================== {% endcomment %}
{%- if section.settings.hover_enable -%}
<script>
let items = document.querySelector(".menu-drawer__navigation").querySelectorAll("details");
items.forEach(item => {
  item.addEventListener("mouseover", () => {
    item.setAttribute("open", true);
    item.classList.add("menu-opening");
    item.querySelector("ul").addEventListener("mouseleave", () => {
      item.removeAttribute("open");
      item.classList.remove("menu-opening");
    });
  });
  item.addEventListener("mouseleave", () => {
    item.removeAttribute("open");
    item.classList.remove("menu-opening");
  });
});
</script>
{%- endif -%}

{% comment %} Margin-Right on Hover Menu Items  {% endcomment %}
<script>
document.addEventListener('DOMContentLoaded', function() { 
  const listItem = document.querySelector('#HeaderDrawer-categories');
  const menuBar = document.querySelector('.menu-drawer__menu');
  const submenu = document.querySelector('.menu-drawer__submenu');
  const menuItem2 = document.querySelector('#Details-menu-drawer-menu-item-2');
  const drawerToggleButton = document.querySelector('.header__icon--menu'); // This is the summary element controlling the drawer

  // Function to add margin based on screen size
  function addMargin() {
    if (window.innerWidth > 750) { // Check if the screen width is greater than 750px
      menuBar.style.marginRight = '15%';
    }
  }

  // Function to remove margin
  function removeMargin() {
    if (window.innerWidth > 750 && !listItem.matches(':hover') && !submenu.matches(':hover')) {
      menuBar.style.marginRight = '';
    }
  }

  // Function to reset margin when drawer is closed
  function resetMarginOnClose() {
    if (window.innerWidth > 750) {
      menuBar.style.marginRight = ''; // Reset the margin
    }
  }

  // Check if hover functionality is enabled
  {%- if section.settings.hover_enable -%}
  listItem.addEventListener('mouseover', addMargin);
  listItem.addEventListener('mouseout', removeMargin);
  submenu.addEventListener('mouseover', addMargin);
  submenu.addEventListener('mouseout', removeMargin);
  {%- endif -%}

  // Toggle the margin-right on click, only for devices greater than 750px
  listItem.addEventListener('click', function() {
    if (window.innerWidth > 750) {
      if (menuBar.style.marginRight === '15%') {
        menuBar.style.marginRight = '';
      } else {
        menuBar.style.marginRight = '15%';
      }
    }
  });

  // Check for drawer open/close using aria-expanded and reset margin accordingly
  drawerToggleButton.addEventListener('click', function() {
    const isDrawerOpen = drawerToggleButton.getAttribute('aria-expanded') === 'true';
    if (!isDrawerOpen) {
      resetMarginOnClose(); // Reset margin when drawer is closing
    }
  });

  // For devices less than 750px: Toggle 'active' class on '.menu-item' when clicking on '#Details-menu-drawer-menu-item-2'
  if (window.innerWidth <= 750) {
    menuItem2.addEventListener('click', function() {
      document.querySelectorAll('#Details-menu-drawer-menu-item-2').forEach(item => {
        item.classList.toggle('active'); // Toggle 'active' class
      });
    });
  }
});
</script>


  
{%- if settings.cart_type == "notification" -%}
  {%- render 'cart-notification', color_scheme: section.settings.color_scheme, desktop_menu_type: section.settings.menu_type_desktop -%}
{%- endif -%}

{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky = this.getAttribute('data-sticky-type') === 'always' || this.getAttribute('data-sticky-type') === 'reduce-logo-size';
      this.headerBounds = {};

      this.setHeaderHeight();

      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      };

      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach(disclosure => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
{% endjavascript %}

<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "max_blocks": 3,
  "settings": [
    {
      "type": "select",
      "id": "logo_position",
      "options": [
        {
          "value": "top-left",
          "label": "t:sections.header.settings.logo_position.options__2.label"
        },
        {
          "value": "top-center",
          "label": "t:sections.header.settings.logo_position.options__3.label"
        },
        {
          "value": "middle-left",
          "label": "t:sections.header.settings.logo_position.options__1.label"
        },
        {
          "value": "middle-center",
          "label": "t:sections.header.settings.logo_position.options__4.label"
        }
      ],
      "default": "middle-left",
      "label": "t:sections.header.settings.logo_position.label",
      "info": "t:sections.header.settings.logo_help.content"
    },
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "menu_type_desktop",
      "options": [
        {
          "value": "dropdown",
          "label": "t:sections.header.settings.menu_type_desktop.options__1.label"
        },
        {
          "value": "mega",
          "label": "t:sections.header.settings.menu_type_desktop.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.header.settings.menu_type_desktop.options__3.label"
        }
      ],
      "default": "dropdown",
      "label": "t:sections.header.settings.menu_type_desktop.label",
      "info": "t:sections.header.settings.menu_type_desktop.info"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    },
    {
      "type": "checkbox",
      "id": "show_line_separator",
      "default": true,
      "label": "t:sections.header.settings.show_line_separator.label"
    },
   
    {
      "type": "select",
      "id": "drawer_position",
      "options": [
        {
          "value": " navigation heading icons",
          "label": "left"
        },
        {
          "value": "heading navigation icons",

          "label": "center"
        },
        {
          "value": "   heading icons navigation",
          "label": "right"
        }
        
      ],
      "label": "Drawer Position",
      "info": "Drawer Position"
    },
    {
      "type": "checkbox",
      "id": "hover_enable",
      "default": true,
      "label": "Enable Hover Affect On Menu"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__1.content"
    },


    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "color_scheme",
      "id": "menu_color_scheme",
      "label": "t:sections.header.settings.menu_color_scheme.label",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__3.content",
      "info": "t:sections.header.settings.header__4.info"
    },
    {
      "type": "checkbox",
      "id": "enable_country_selector",
      "default": false,
      "label": "t:sections.header.settings.enable_country_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__5.content",
      "info": "t:sections.header.settings.header__6.info"
    },
    {
      "type": "checkbox",
      "id": "enable_language_selector",
      "default": false,
      "label": "t:sections.header.settings.enable_language_selector.label"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.header__7.content",
      "info": "t:sections.header.settings.header__7.info"
    },
    {
      "type": "checkbox",
      "id": "enable_customer_avatar",
      "default": true,
      "label": "t:sections.header.settings.enable_customer_avatar.label",
      "info": "t:sections.header.settings.enable_customer_avatar.info"
    },
    {
      "type": "header",
      "content": "t:sections.header.settings.mobile_layout.content"
    },
    {
      "type": "select",
      "id": "mobile_logo_position",
      "options": [
        {
          "value": "center",
          "label": "t:sections.header.settings.mobile_logo_position.options__1.label"
        },
        {
          "value": "left",
          "label": "t:sections.header.settings.mobile_logo_position.options__2.label"
        }
      ],
      "default": "center",
      "label": "t:sections.header.settings.mobile_logo_position.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.spacing"
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.header.settings.margin_bottom.label",
      "default": 0
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 36,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 20
    }
  ],
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
